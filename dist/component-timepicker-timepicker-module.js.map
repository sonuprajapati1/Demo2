{"version":3,"sources":["webpack:///./src/app/pages/component/timepicker/timepicker.component.html","webpack:///./src/app/pages/component/timepicker/timepicker.component.ts","webpack:///./src/app/pages/component/timepicker/timepicker.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,6XAA6X,aAAa,ybAAyb,iCAAiC,mEAAmE,6BAA6B,+cAA+c,iCAAiC,mEAAmE,6BAA6B,yFAAyF,aAAa,ubAAub,gCAAgC,iEAAiE,4BAA4B,yFAAyF,aAAa,g8CAAg8C,cAAc,ymCAAymC,cAAc,iE;;;;;;;;;;;;;;;;;;;;;;ACA/yJ;AAEC;AAO3C;IALA;QAMG,SAAI,GAAG,EAAC,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAC,CAAC;QAC7B,aAAQ,GAAG,IAAI,CAAC;QAMlB,0BAA0B;QAC1B,YAAO,GAAG,IAAI,CAAC;QAMf,2BAA2B;QAC3B,aAAQ,GAAG,IAAI,CAAC;QAMhB,8BAA8B;QAC9B,UAAK,GAAkB,EAAC,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAC,CAAC;QACzD,aAAQ,GAAG,CAAC,CAAC;QACb,eAAU,GAAG,EAAE,CAAC;QAChB,eAAU,GAAG,EAAE,CAAC;QAIhB,SAAI,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,UAAC,OAAoB;YAC9C,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YAE5B,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACX,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;gBACpB,MAAM,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC;YAC1B,CAAC;YACD,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;gBACpB,MAAM,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC;YACzB,CAAC;YAED,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IA1CC,4CAAc,GAAd;QACI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACnC,CAAC;IAKD,2CAAa,GAAb;QACE,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IAC/B,CAAC;IAKD,4CAAc,GAAd;QACI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACnC,CAAC;IApBU,mBAAmB;QAL/B,+DAAS,CAAC;YACV,QAAQ,EAAE,iBAAiB;;SAE3B,CAAC;OAEW,mBAAmB,CA8C/B;IAAD,0BAAC;CAAA;AA9C+B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTS;AACM;AACmB;AACX;AACM;AACN;AAEvD,IAAM,MAAM,GAAW,CAAC;QACvB,IAAI,EAAE,EAAE;QACR,IAAI,EAAE;YACD,KAAK,EAAE,YAAY;YACnB,IAAI,EAAE,CAAC,EAAC,KAAK,EAAE,WAAW,EAAE,GAAG,EAAE,GAAG,EAAC,EAAC,EAAC,KAAK,EAAE,aAAa,EAAC,EAAC,EAAC,KAAK,EAAE,YAAY,EAAC,CAAC;SACpF;QACJ,SAAS,EAAE,yEAAmB;KAC9B,CAAC,CAAC;AAYH;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAV5B,8DAAQ,CAAC;YACT,OAAO,EAAE;gBACL,0DAAW;gBACX,4DAAY;gBACX,kEAAmB;gBACnB,oEAAS,CAAC,OAAO,EAAE;gBACpB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC7B;YACJ,YAAY,EAAE,CAAC,yEAAmB,CAAC;SACnC,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ","file":"component-timepicker-timepicker-module.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"card-title\\\">Timepicker</h3>\\n                <h6 class=\\\"card-subtitle\\\">This is basic Timepicker</h6>\\n                <ngb-timepicker [(ngModel)]=\\\"time\\\"></ngb-timepicker>\\n                <pre>Selected time: {{time | json}}</pre>\\n  \\t\\t\\t</div> \\n        </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"card-title\\\">Spinners</h3>\\n                <h6 class=\\\"card-subtitle\\\">This is Spinners</h6>\\n                <ngb-timepicker [(ngModel)]=\\\"time\\\" [spinners]=\\\"spinners\\\"></ngb-timepicker>\\n                <button class=\\\"m-t-1 m-t-10 btn btn-sm btn-outline-{{spinners ? 'success' : 'danger'}}\\\" (click)=\\\"toggleSpinners()\\\">\\n                    Spinners - {{spinners ? \\\"ON\\\" : \\\"OFF\\\"}}\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"card-title\\\">Meridian</h3>\\n                <h6 class=\\\"card-subtitle\\\">This is Meridian Timepicker</h6>\\n                <ngb-timepicker [(ngModel)]=\\\"time\\\" [meridian]=\\\"meridian\\\"></ngb-timepicker>\\n                <button class=\\\"btn btn-sm btn-outline-{{meridian ? 'success' : 'danger'}}\\\" (click)=\\\"toggleMeridian()\\\">\\n                    Meridian - {{meridian ? \\\"ON\\\" : \\\"OFF\\\"}}\\n                </button>\\n                <hr>\\n                <pre>Selected time: {{time | json}}</pre>\\n  \\t\\t\\t</div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"card-title\\\">Seconds</h3>\\n                <h6 class=\\\"card-subtitle\\\">This is Seconds with the on off</h6>\\n                <ngb-timepicker [(ngModel)]=\\\"time\\\" [seconds]=\\\"seconds\\\"></ngb-timepicker>\\n                <button class=\\\"btn btn-sm btn-outline-{{seconds ? 'success' : 'danger'}}\\\" (click)=\\\"toggleSeconds()\\\">\\n                    Seconds - {{seconds ? \\\"ON\\\" : \\\"OFF\\\"}}\\n                </button>\\n                <hr>\\n                <pre>Selected time: {{time | json}}</pre> \\n  \\t\\t\\t</div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"card-title\\\">Custom steps</h3>\\n                <h6 class=\\\"card-subtitle\\\">This is Custom steps</h6>\\n                <ngb-timepicker [(ngModel)]=\\\"time2\\\" [seconds]=\\\"true\\\"\\n                    [hourStep]=\\\"hourStep\\\" [minuteStep]=\\\"minuteStep\\\" [secondStep]=\\\"secondStep\\\"></ngb-timepicker>\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-3\\\">\\n                        <label for=\\\"changeHourStep\\\">Hour Step</label>\\n                        <input id=\\\"changeHourStep\\\" type=\\\"number\\\" class=\\\"form-control form-control\\\" [(ngModel)]=\\\"hourStep\\\" />\\n                    </div>\\n                    <div class=\\\"col-md-3\\\">\\n                        <label for=\\\"changeMinuteStep\\\">Minute Step</label>\\n                        <input id=\\\"changeMinuteStep\\\" type=\\\"number\\\" class=\\\"form-control form-control\\\" [(ngModel)]=\\\"minuteStep\\\" />\\n                    </div>\\n                    <div class=\\\"col-md-3\\\">\\n                        <label for=\\\"changeSecondStep\\\">Second Step</label>\\n                        <input id=\\\"changeSecondStep\\\" type=\\\"number\\\" class=\\\"form-control form-control\\\" [(ngModel)]=\\\"secondStep\\\" />\\n                    </div>\\n                </div>\\n                \\n                <pre class=\\\"m-t-20\\\">Selected time: {{time2 | json}}</pre>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"card-title\\\">Custom validation</h3>\\n                <h6 class=\\\"card-subtitle\\\">Illustrates custom validation, you have to select time between 12:00 and 13:59</h6>\\n                <div class=\\\"form-group\\\" [class.has-success]=\\\"ctrl.valid\\\" [class.has-danger]=\\\"!ctrl.valid\\\">\\n                  <ngb-timepicker [(ngModel)]=\\\"time3\\\" [formControl]=\\\"ctrl\\\" required></ngb-timepicker>\\n                  <div class=\\\"form-control-feedback\\\">\\n                    <div *ngIf=\\\"ctrl.valid\\\">Great choice</div>\\n                    <div *ngIf=\\\"ctrl.errors && ctrl.errors['required']\\\">Select some time during lunchtime</div>\\n                    <div *ngIf=\\\"ctrl.errors && ctrl.errors['tooLate']\\\">Oh no, it's way too late</div>\\n                    <div *ngIf=\\\"ctrl.errors && ctrl.errors['tooEarly']\\\">It's a bit too early</div>\\n                  </div>\\n                </div> \\n\\n                <hr>\\n                <pre>Selected time: {{time3 | json}}</pre>  \\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component } from '@angular/core';\nimport {NgbTimeStruct} from '@ng-bootstrap/ng-bootstrap';\nimport {FormControl} from '@angular/forms';\n\n@Component({\n\tselector: 'ngbd-timepicker',\n\ttemplateUrl: './timepicker.component.html'\n}) \n \nexport class NgbdtimepickerBasic{\n  \ttime = {hour: 13, minute: 30};\n    meridian = true;\n\n  toggleMeridian() {\n      this.meridian = !this.meridian;\n  }\n\n  // This is for the seconds\n  seconds = true;\n\n  toggleSeconds() {\n    this.seconds = !this.seconds;\n  }\n\n  // This is for the spinners\n  spinners = true;\n\n  toggleSpinners() {\n      this.spinners = !this.spinners;\n  }\n\n  // This is for the column step\n  time2: NgbTimeStruct = {hour: 13, minute: 30, second: 0};\n  hourStep = 1;\n  minuteStep = 15;\n  secondStep = 30;\n\n  // This is for the validation\n  time3;\n  ctrl = new FormControl('', (control: FormControl) => {\n    const value = control.value;\n \n    if (!value) {\n      return null;\n    }\n\n    if (value.hour < 12) {\n      return {tooEarly: true};\n    }\n    if (value.hour > 13) {\n      return {tooLate: true};\n    }\n\n    return null;\n  });\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgbdtimepickerBasic } from './timepicker.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nconst routes: Routes = [{\n\tpath: '',\n\tdata: {\n      title: 'Timepicker',\n      urls: [{title: 'Dashboard', url: '/'},{title: 'ngComponent'},{title: 'Timepicker'}]\n    },\n\tcomponent: NgbdtimepickerBasic\n}];\n\n@NgModule({\n\timports: [\n    \tFormsModule,\n    \tCommonModule,\n      ReactiveFormsModule,\n      NgbModule.forRoot(),\n    \tRouterModule.forChild(routes)\n    ],\n\tdeclarations: [NgbdtimepickerBasic]\n})\nexport class TimepickerModule { }\n"],"sourceRoot":""}